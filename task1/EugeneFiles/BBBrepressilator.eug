include "design-space.h";

/** Hierarchical composition of the repressilator **/
Device RepressilatorUnit(
	Promoter, RBS, Repressor, Terminator, 
	Promoter, RBS, Repressor, Terminator,
	Promoter, RBS, Repressor, Terminator);
	
Device ReporterUnit(
	Promoter, RBS, Reporter, Terminator);
		
Device Repressilator(
	RepressilatorUnit, ReporterUnit);

/** RULES **/
Rule r(
	ON Repressilator:

		// Repressing Relationships
		RepressilatorUnit[2] REPRESSES RepressilatorUnit[4]
			AND
		RepressilatorUnit[6] REPRESSES RepressilatorUnit[8]
			AND
		RepressilatorUnit[10] REPRESSES RepressilatorUnit[0]
		
			AND
		
		// Order of the Promoters and Repressor	
		//STARTSWITH pLac AND TetR NEXTTO pLac AND
		//LacI NEXTTO pCI AND cI NEXTTO pTetR
		
		AND
		
		// pTetR represses the Reporting Unit
		RepressilatorUnit[10] REPRESSES ReporterUnit[0]

			AND
		
		// GFP as reporter
		CONTAINS GFP
		
			AND

		// T1 Terminators
		T1 EXACTLY 4

			
	
);
	
/** PRODUCE ALL POSSIBLE REPRESSILATORS **/
lst = product(Repressilator, strict);
println(lst.size(), " repressilators where generated...");

pigeon(lst);